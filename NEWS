planned changes:
----------------
 * names-method for partitionCluster, keynessCluster objects
 * show-method for keynessCluster
 * remove empty rows in keynessCluster-object
 * multicore for keyness,partitionCluster-method
 * show method for keynessCluster
 * documentation to be improved (kwic, keyness)
 * minus values for statistical tests if O < E in keyness and context method
 * log likelihood test for keyness method
 * check: rename keyness to tex
 * no documentation for keynessCluster-class (e.g. if I want to know the slots)
 * in partition-constructur parallel computation of word lists
 * in egoNetwork-method parallelisation
 * egoNetwork as a method on data.frame resulting from collocations
 * write documentation for as.matrix-method
 * check: why are there no negative chiSquare-values with tail(keyness-object)
 * rename statisticalTest to method
 * include partition as slot in classes

v0.36
 * context,collocations-method
 * call-slot in most objects
 * as.TermDocumentMatrix,collocations-method finalized

v0.35
 * textstat-class introduced to serve as superclass for keyness- and context- classes
 * chisquare-, ll-, pmi-methods for statistics
 * collocations-method introduced
 * multicore for partition-constructor (parallel preparation of tf-lists)
 * parallelisation of as.sparseMatrix,collocations-method
 * introduction of keyness,collocations-method

v0.4.34
 * plot-method for partitionCluster
 * rm.blank-functionality extended

v0.4.33
 * code re-ordered


v0.4.32
 * meta,character-method to learn about a corpus without first generating a partition
 * rudimentary barplot-method for partitionCluster
 * functionality to remove empty rows in DocumentTermMatrix upon construction
 * tf/idf-weighting included in as.TermDocumentMatrix
 * summary-method for keynessCluster-class
 * [[- method for keynessCluster-class


v0.4.31
 * some changes to context method:
    - whether to use multicore can be stated explicitly
    - stopwords renamed to stoplist, and a positivelist is introduced
 * individual documentation for partitionCluster enrich-method
 * NULL object returned for partition call if s-attribute/value-combination not available
 * call to dispersion (2dim): metadata are set up if not available
 * as.data.frame-method for context and keyness class to access statistics table more easily

v0.4.30
 * minor bug fixes

v0.4.29
 * controls() function for setting drillingControls
 * mail concordances
 * rework of kwic as a S4 method for partition and context class
 * speeches method
 * tf for partitionCluster improved

v0.4.28
 * reorganization of the code in files so that shift to S4 methods is reflected
 * documentation for trim method
 * documentation for enrich method
 * addPos method integrated into enrich method [to be checked]
 * addPos is kept as a method, but not exported into namespace
 * set up of missing metadata for dispersion
 * warning if labels are missing in tf method for partitionCluster
 * Encoding of partition labels adjusted to encoding of console
 * adjust encoding for input to partitionCluster
 * speeches method is drafted at end of partition.R [final development, debugging]
 * context method: no explicit statement of posFilter required [to be checked]
 * methods for adjusting crosstab objects fused into trim,crosstab-method [BUG, needs to be checked]


v0.4.27
 * context and contextCluster functions turned into methods

v0.4.26
 * extended export functionality: mail statistics
 * parameters for partition and partitionCluster call simplified (tf, meta)
 * sAttributes method for character vectors to get sAttributes of corpus

v0.4.25
 * html method to inspect partitions

v0.4.24
 * tf method for partition and partitionCluster
 * summary for partitionCluster
 * selective setup of metadata for speeding up things

v0.4.23
 * stopwords option introduced in context function for filtering and brute disambiguation
 * cqpQuery class thrown out again - it does not improve usability
 * partitionCluster and contextCluster are now S4 classes, with some more methods
 * adjust function is now trim method for contextCluster objects

v0.4.22
 * zoom function added to specify partitions
 * partitionCluster faster as it relies on zoom function
 * context function will work on character vectors and cqpQuery object
 * some modifications of backend functions

v0.4.21
 * technical update: automatic generation of NAMESPACE file with roxygen

v0.4.20
 * new cqpQuery-class introduced
 * distribution-function renamed as dispersion
 * trim function for sorting tables

v0.4.19
 * documentation streamlined, package fully roxygenized

v0.4.18
 * using options (not exported list drillingControls)
 * getting Encoding of corpus from registry

v0.4.17
 * method 'addPos' added for partition object, and keyness objects 

v0.4.16
 * inclusion of sample Data

v0.4.15
 * reduction of dependencies for publication of the package on CRAN

v0.4.14
 * adapting partition and distribution functions to cope with nested xml
 
v0.4.13 
 * wordCloud visualization
 * usability of concordances improved

v0.4.12
 * partitionMerge changed so that it will use full functionality of partition-function
 * helper functions for distribution on two dimensions improved, tremendous gain in speed
 * started to fill in sample code into vignette

v0.4.12
 * new function for frequency counts at partition setup

v0.4.11
 * inclusion of shiny apps
 * function 'distribution' as wrapper for functions to inspect distribution

v0.4.10
 * improved usability of the package, started to use lowerCamelCase

v0.4.9
 * partition can now be called without explicitly stating a label
 * partition does not require sAttributes to be set, function .sattributes2cpos streamlined
 * no labels in partition.cluster
 * in context, the pos.filter can also be set as an exclusion   

v0.4.8
 * started to make functions more usable by shortening function names, 'partition.init' is now 'partition'
 * xterm highlighting for collocates
 * context can be called with parameters given by drillingControls

v0.4.7
 * xtermStyle used for kwic output on console
 * partition object can be indexed

v0.4.6
 * partition.init expanded to allow for the generation of partitions with specified start and end dates
 * wordscore analysis adapted so that it can be really used for performing wordscore analysis

v0.4.5
 * export functionality to tm introduced with as.TermDocumentMatrix.partitioncluster

v0.4.4
 * combine.collocates improved (new columns for plotting)

v0.4.3
 * bug-fix for partition.merge

v0.4.1
 *  partition.init can be used without setting up frequency lists and metadata. This may be useful, if a quick partition.init is desired and term frequencies and/or metadata are not needed.
 *  partition.init can handle sattribute-lists with length == 1. partition.init will still not work, if no sattributes are given.
 *  query.crosstab has been renamed to crosstab
 *  crosstab will accept special characters (transforming them to .)
