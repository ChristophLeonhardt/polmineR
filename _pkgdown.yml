template:
  params:
    bootswatch: cerulean
reference:
  - title: "Package Basics"
    desc: Getting started with polmineR (CLI And GUI usage).
    contents:
      - polmineR
  - title: "Corpora and subcorpora"
    desc: Corpora, subcorpora/partitions, and partition_bundle objects are the point of departure for any analysis using polmineR. Constructors introduced in the next section require an understanding of basic methods and classes to generate and manage (sub-)corpora
    contents:
      - use
      - Corpus
      - corpus
      - partition
      - partition_bundle
      - p_attributes
      - s_attributes
      - as.speeches
      - subcorpus
      - regions
      - tempcorpus
      - tempcorpus_class
  - title: "Methods I: Basic Vocabulary"
    desc: Data analysis using polmineR will usually start by calling a constructor method resulting in an S4 class object with the name of the calling method. All methods basic vocabulary can be applied to corpora (defined by a character vector), to partitions, and to partition_bundle objects, some are applicable to additional classes. These methods are designed to be used in a pipe.
    contents:
      - kwic
      - hits
      - count
      - dispersion
      - ngrams
      - context
      - cooccurrences
      - features
  - title: "Methods II: Processing Objects"
    desc: The polmineR package offers a repertoire to modify base objects, and for type conversion. Methods for modyfing classes and type conversion.
    contents:
      - size
      - terms
      - label
      - enrich
      - trim
      - noise
      - encoding
      - as.TermDocumentMatrix
      - as.sparseMatrix
      - as.VCorpus
      - chisquare
      - ll
      - t_test
      - means
      - weigh
      - mail
      - dotplot
  - title: "Methods III: Fulltext Output"
    desc: A key consideration of polmineR is to combine quantitative and qualitative steps of analysis in a workflow. A set of methods is exposed to generate and enhance fulltext output.
    contents: 
      - read
      - html
      - as.markdown
      - browse
      - view
      - highlight
      - tooltips
      - get_template
      - get_type
  - title: "The 'textstat' Class & Childs"
    desc: The main feature of the textstat class and of classes inheriting from it is that it keeps statistical information about a corpus or partition in a data.table in the field 'stat'. Methods defined for the textstat superclass are available for its child classes, unless they are overloaded in a specified manner.
    contents:
      - textstat-class
      - count_class
      - ngrams_class
      - partition_class
      - hits_class
      - context-class
      - cooccurrences-class
      - features-class
  - title: "The 'kwic' & 'Labels' Classes"
    desc: xxx
    contents:
      - kwic-class
      - Labels-class
  - title: "The 'bundle' Class & Childs"
    desc: S4 classes for managing text analysis.
    contents:
      - bundle-class
      - partition_bundle-class
      - context_bundle-class
      - blapply
  - title: "Low-level CWB Access"
    desc: The API used to access CWB indexed corpora is the RcppCWB package. A set of functions in the polmineR package serves as an intermediate interface to access corpus data.
    contents:
      - registry
      - registry_reset
      - registry_get_name
      - CQI.super
      - cpos
      - get_token_stream
      - decode
      - cqp
  - title: "Utility Functions"
    desc: Exported utility functions / helpers.
    contents:
      - encodings
  - title: "Backwards Compatibility"
    desc: Starting with v0.7.9, the coding style of the polmineR-package has moved from camelCase to snake_case. A set of 'old style'-functions ensures backwards compatibility and that old code will not break.
    contents:
      - renamed
