% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/opencpu.R
\docType{class}
\name{opencpu}
\alias{opencpu}
\alias{remote_corpus}
\alias{count,remote_corpus-method}
\alias{kwic,remote_corpus-method}
\alias{size,remote_corpus-method}
\alias{s_attributes,remote_corpus-method}
\title{Access corpus in OpenCPU server.}
\usage{
\S4method{count}{remote_corpus}(.Object, query)

\S4method{kwic}{remote_corpus}(.Object, query)

\S4method{size}{remote_corpus}(x)

\S4method{s_attributes}{remote_corpus}(.Object)
}
\description{
A CWB corpus can be hosted on an OpenCPU (see \url{www.opencpu.org}) server.
The results of polmineR functions and methods that are executed on the remote
machine can be processed in a local R session.
}
\details{
The whereabouts of an OpenCPU server can be stated in an environment variable
"OPENCPU_SERVER". Environment variables for R sessions can be set easily in
the .Renviron file. A convenient way to do this is to call
\code{usethis::edit_r_environ()}.
}
\section{Slots}{

\describe{
\item{\code{corpus}}{Length-one character vector, name of corpus on remote machine.}

\item{\code{server}}{The URL (can be IP address) of the OpenCPU server.}

\item{\code{type}}{The type of the corpus (e.g. "plpr").}

\item{\code{encoding}}{The encoding of the corpus.}
}}

\examples{
\dontrun{
REUTERS <- corpus("REUTERS", server = Sys.getenv("OPENCPU_SERVER"))
count(REUTERS, query = "oil")
size(REUTERS)
foo <- kwic(REUTERS, query = "oil")

GERMAPARL <- new("remote_corpus", corpus = "GERMAPARL", server = Sys.getenv("OPENCPU_SERVER"))
s_attributes(GERMAPARL)
size(GERMAPARL)
count(GERMAPARL, query = "Integration")
kwic(GERMAPARL, query = "Islam")
}
}
\seealso{
To instantiate an object of class \code{remote_corpus}, the
  \code{corpus}-class can be used (by providing argument \code{server}), see
  respective documentation.
}
